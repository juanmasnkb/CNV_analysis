###############################################################################
###############################################################################
################################# GAIA Package ################################
###############################################################################
###############################################################################

setwd("C:/Users/Juanma/Desktop/JuanMa/IMBECU/CNVs")

library("TCGAbiolinks")
library(gaia)
library("GEOquery")

### Get the DATA ###

### Prostate ###

query_prad <- GDCquery(project = "TCGA-PRAD",
                       data.category = "Copy Number Variation",
                       data.type = "Masked Copy Number Segment",
                       legacy = FALSE,
                       sample.type = c("Primary solid Tumor"))

GDCdownload(query_prad)

prad<- GDCprepare(query_prad,
                  save = TRUE,
                  save.filename = "prad.cnv.hg38.rda")

###############################################################################
############################## Marker Descriptor Matrix #######################
###############################################################################


## getting Probes- Metadata ##

# platform Affymetrix Genome-Wide Human SNP Array 6.0

## for hg38 ##

url<- "https://api.gdc.cancer.gov/data/a1c5c348-7929-453f-8d67-da58601ef040"
#download.file(url = url, "snp6.na35.remap.hg38.subset.txt.gz")
#gunzip("snp6.na35.remap.hg38.subset.txt.gz", "snp6.na35.remap.hg38.subset.txt")
probes_metadata<- read.csv("snp6.na35.remap.hg38.subset.txt", sep = "\t",as.is = TRUE)
probes_metadata<- probes_metadata[probes_metadata[,"freqcnv"]==FALSE,]
colnames(probes_metadata)[1:3] <- c("Probe.Name", "Chromosome", "Start")
#probes_metadata<- probes_metadata[,c(1:3)]

probes_metadata[probes_metadata$Chromosome == "X","Chromosome"] <- 23
probes_metadata[probes_metadata$Chromosome == "Y","Chromosome"] <- 24
probes_metadata$Chromosome <- as.integer(probes_metadata$Chromosome)
markerID <- paste(probes_metadata$Chromosome,probes_metadata$Start, sep = ":")
# Removed duplicates #
probes_metadata <- probes_metadata[!duplicated(markerID),]

markers_obj <- load_markers(probes_metadata)

###############################################################################
########################  Aberrant Region Descriptor Matrix   #################
###############################################################################

load("prad.cnv.hg38.rda")

synthCNV_Matrix<- as.data.frame(data)

#a<- ifelse(synthCNV_Matrix$Segment_Mean>0.2,1,0)
#b<- ifelse(synthCNV_Matrix$Segment_Mean<(-0.2),-1,0)
#c<- a+b
#synthCNV_Matrix$Aberrationkind<- c

synthCNV_Matrix <- cbind(synthCNV_Matrix,Label=NA)
synthCNV_Matrix[synthCNV_Matrix[,"Segment_Mean"] < -0.2,"Label"] <- 1
synthCNV_Matrix[synthCNV_Matrix[,"Segment_Mean"] > 0.2,"Label"] <- 2
synthCNV_Matrix <- synthCNV_Matrix[!is.na(synthCNV_Matrix$Label),]
#Replace x and y chromosome names
xidx <- which(synthCNV_Matrix$Chromosome=="X")
yidx <- which(synthCNV_Matrix$Chromosome=="Y")
synthCNV_Matrix[xidx,"Chromosome"] <- 23
synthCNV_Matrix[yidx,"Chromosome"] <- 24
synthCNV_Matrix$Chromosome <- sapply(synthCNV_Matrix$Chromosome,as.integer)
synthCNV_Matrix<- synthCNV_Matrix[,c(1,2,3,4,5,8)]
colnames(synthCNV_Matrix)<- c("Sample.Name", "Chromosome", "Start", "End", "Num.of.Markers", "Aberration")

#length(table(synthCNV_Matrix$Sample.Name)) ## number of samples

cnv_obj<- load_cnv(synthCNV_Matrix, markers_obj, 501)

## Run GAIA ##

runGAIA(cnv_obj, markers_obj, "results.txt")

##############################################################################
##############################################################################
############################# CNTools Package ################################
##############################################################################
##############################################################################

library(CNTools)
library(dplyr)
library(biomaRt)

setwd("C:/Users/Juanma/Desktop/JuanMa/IMBECU/CNVs")

load("brca.cnv.hg19.rda")
data<- as.data.frame(data)
colnames(data)<- c("ID", "chrom", "loc.start", "loc.end", "num.mark", "seg.mean")

cnv_brca<- CNSeg(data)  ##output of DNACopy segmentation data

#getRS: method that convert segment data into reduced segment matrix #

########### RD by regions ###########

reducedsegByRegion <- getRS(cnv_brca, by = "region", imput = FALSE, XY = FALSE, what = "mean")

reducedseg <- rs(reducedsegByRegion)

########### RD by GENES ###########
          ## HSP INFO ##
###################################

hsp_info_hg38<- read.csv("hspUCSCcanonicaltranscript_hg38.txt", header = TRUE, sep = "\t")
## read.csv("hspinfo_38.txt", sep="\t") ## tabla biomart

rdByGene <- getRS(cnv_he_brca, by = "gene", imput = FALSE, XY = FALSE, geneMap = hspinfo_38, what = "mean")

reducedsegBygene <- rs(rdByGene)
